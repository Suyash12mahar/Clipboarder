<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2wHAP9rBwL+bgYK/m8GEP5v
        BhH/bwcR/m4GEf1tBQ3+bgUF/m4EAP5uBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+bwYA/2sHAP9q
        ByD+bQZz/m8FwP5vBcz/bwfO/m0GyP1sBJr+bQQ//m0DCf5tBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD+bwYA/m4GAv5uBWL9bga9/m8G3v5vBsP/bwfA/m4F0fxuBc3+bgWR/m4GGP5uBgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/nAEAAAAAAD+bgYA/W4GAP1uBZP9bgbb/m4Gsv5uBlj+bgZQ/m4Gcv1uBq7+bgbB/m4GH/5u
        BgD/bwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/nAEAP5wAwH+bgUH/m4FFv5uBab9bQbe/m4Fk/5uBgv+bQYB/mwGIf1t
        Bnv+bQbK/m4GNP5uBgv/bwcDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/nAEAP5wAw/+bgQ8/m4Fhv5uBtv+bQbm/m4Fkf5u
        Bgn+bQYA/m0HG/5tBnn+bQbo/m4Gn/5uBlj/bwcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/28FAAAA
        AAD+bQYA/m0GAP5tBn7+bgbR/m4FwP5uBW39bQVk/m4Fnv5uBdn+bgXB/W0GH/1uBgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD+bgcA/m4GAv5tBlP9bgav/m4F4P5uBtX+bgbR/m8F4P5uBtL+bQaH/mwHFv5t
        BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+bgcA/nADAP5wAhj8bgZg/m4Hrf5uB8v/bwfN/m8Hvf5u
        B4b+awcx/2oHBv9rBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/nAEAP5wAwL9bgYI/m4HD/5u
        BxH/bwcR/m8HEP5uBwv+bAcE/2sHAP9sBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP//4AP//wAA///AA///AAD//8AD//8AAP//
        QAH//wAA//8AAf//AAD//wAB//8AAP4AAAAAfwAA/AAAAAB/AAD8AAPAAH8AAPwAD/gAfwAA/AAAAAB/
        AAD8AAAAAH8AAPwAAAGAfwAA/AEAAYB/AAD8AQABgH8AAP4BAAGAfwAA/wEDgID/AAD/AQPAgP8AAP8B
        A8CA/wAA/wEDgID/AAD/AQABgH8AAPwBAAGAfwAA/AEAAYB/AAD8AAAAAH8AAPwAAAAAfwAA/AAAAAB/
        AAD8AAvgAH8AAPwAAEAAfwAA/AAAAAB/AAD/AAAAAH8AAP//AAH//wAA//8AAf//AAD//0AD//8AAP//
        wAP//wAA///AA///AAD//+AD//8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>